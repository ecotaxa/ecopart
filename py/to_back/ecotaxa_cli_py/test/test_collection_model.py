# coding: utf-8

"""
    EcoTaxa

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.34
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import to_back.ecotaxa_cli_py
from to_back.ecotaxa_cli_py.models.collection_model import CollectionModel  # noqa: E501
from to_back.ecotaxa_cli_py.rest import ApiException

class TestCollectionModel(unittest.TestCase):
    """CollectionModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CollectionModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = to_back.ecotaxa_cli_py.models.collection_model.CollectionModel()  # noqa: E501
        if include_optional :
            return CollectionModel(
                project_ids = [1], 
                provider_user = null, 
                contact_user = null, 
                creator_users = [
                    to_back.ecotaxa_cli_py.models.min_user_model.MinUserModel(
                        id = 1, 
                        email = 'ecotaxa.api.user@gmail.com', 
                        name = 'userName', )
                    ], 
                creator_organisations = [
                    '0'
                    ], 
                associate_users = [
                    to_back.ecotaxa_cli_py.models.min_user_model.MinUserModel(
                        id = 1, 
                        email = 'ecotaxa.api.user@gmail.com', 
                        name = 'userName', )
                    ], 
                associate_organisations = [
                    '0'
                    ], 
                id = 1, 
                external_id = '0', 
                external_id_system = '0', 
                title = 'My collection', 
                short_title = 'My coll', 
                citation = '0', 
                license = 'CC BY 4.0', 
                abstract = '0', 
                description = '0'
            )
        else :
            return CollectionModel(
                project_ids = [1],
                id = 1,
                external_id = '0',
                external_id_system = '0',
                title = 'My collection',
        )

    def testCollectionModel(self):
        """Test CollectionModel"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
