# coding: utf-8

"""
    EcoTaxa

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.27
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import to_back.ecotaxa_cli_py
from to_back.ecotaxa_cli_py.models.prediction_req import PredictionReq  # noqa: E501
from to_back.ecotaxa_cli_py.rest import ApiException

class TestPredictionReq(unittest.TestCase):
    """PredictionReq unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PredictionReq
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = to_back.ecotaxa_cli_py.models.prediction_req.PredictionReq()  # noqa: E501
        if include_optional :
            return PredictionReq(
                project_id = 56, 
                source_project_ids = [
                    56
                    ], 
                learning_limit = 56, 
                features = [
                    '0'
                    ], 
                categories = [
                    56
                    ], 
                use_scn = True, 
                pre_mapping = {
                    'key' : 56
                    }
            )
        else :
            return PredictionReq(
                project_id = 56,
                source_project_ids = [
                    56
                    ],
                features = [
                    '0'
                    ],
                categories = [
                    56
                    ],
                pre_mapping = {
                    'key' : 56
                    },
        )

    def testPredictionReq(self):
        """Test PredictionReq"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
